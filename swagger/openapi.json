{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger workshop",
    "description": "A sample API that uses localhost to demonstrate features in the OpenAPI 3.0 specification",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Spyderweb Team",
      "email": "apiteam@swagger.io",
      "url": "http://swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Descripción Servidor"
    },
    {
      "url": "http://localhost:8081",
      "description": "Descripción servidor 2"
    }
  ],
  "paths": {
    "/booking": {
      "get": {
        "description": "Obtiene un booking",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Código del booking",
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "getBooking response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new booking in the store.  Duplicates are allowed",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int64",
                "example": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "booking response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBooking"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NewBooking"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/booking/{id}": {
      "get": {
        "description": "Get a booking based on path parameter",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response with path param",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBooking"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NewBooking"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "deletes a single booking based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of booking to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "booking deleted"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Booking": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "origen": {
            "type": "string",
            "example": "NY"
          },
          "destino": {
            "type": "string",
            "example": "BCN"
          }
        }
      },
      "NewBooking": {
        "type": "array",
        "items": {
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "example": 1
            },
            "origen": {
              "type": "string",
              "example": "NY"
            },
            "destino": {
              "type": "string",
              "example": "BCN"
            }
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}